	/**
	 * Generate the main README for the JCB Joomla Components repository in Markdown format.
	 *
	 * Joomla Components act as the central packaging unit in JCB, compiling everything —
	 * views, code, config, logic, and version control — into a final installable extension.
	 *
	 * @param  array  $items  All Joomla components defined in this repository.
	 *
	 * @return string  The full generated Markdown README.
	 * @since  3.2.0
	 */
	public function get(array $items): string
	{
		$readme = [];

		// Header
		$readme[] = '# JCB! Joomla Components';
		$readme[] = '';

		// Overview
		$readme[] = '### What Are Joomla Components in JCB?';
		$readme[] = <<<MD
In Joomla Component Builder (JCB), a Joomla Component is the top-level unit that brings everything together.

It acts as the central container — compiling all attached entities and logic into a complete, versioned, installable Joomla extension.

A Component includes:

- Admin Views (core data tables with fields and ACLs)
- Site Views (frontend output)
- Custom Admin Views (customized backend interfaces)
- Modules & Plugins (packaged alongside)
- Custom Code (injectable and reusable)
- Files and Folders (media, scripts, assets)
- MySQL Tweaks & Schema Updates
- PHP Helper Classes
- Component Configurations (global parameters)
- Placeholders & Overrides
- Dynamic Dashboards (overview screens)
- Routing Setup (site and admin)
- Version Definitions (Joomla 3, 4, 5 support)
- README, Wikis & Docs (optional, for internal reference)

Every entity you build in JCB is ultimately assembled into one or more Joomla Components — which are then compiled into installable packages, ready for use or distribution.

---
MD;

		// Use Cases
		$readme[] = '### What Makes Components So Central?';
		$readme[] = <<<MD
Components control the following:

- Which views, modules, plugins, and helpers are packaged
- How the database is initialized or migrated (via tweaks)
- Where assets are placed in the Joomla filesystem
- Which version of Joomla the output is compatible with
- How the component is installed, updated, and distributed
- What language files, readmes, and wikis are bundled
- Who authored the component and where it lives in Git

> Components are the single point of truth for defining your extension. Once everything else is configured — fields, views, snippets, layouts — you bind them all together through the Component.

---
MD;

		// Maintenance
		$readme[] = '### Version Control, Syncing & Collaboration';
		$readme[] = <<<MD
JCB Components support:

- Branch-specific configuration (Joomla 3, 4, 5)
- Component-level versioning and changelogs
- Resetting from a central repository
- Forking to maintain your own variants
- Pushing updates upstream or into shared team forks

They can also be extended via init/reset/update workflows, just like all other JCB entities.

This makes them ideal for distributed teams, client-specific forks, and open-source extension development.

> A Component in JCB isn't just a bundle of files — it's a fully-defined application package that carries the design, data, logic, and behaviour of your Joomla extension.

---
MD;

		// Index
		$readme[] = '### Index of Joomla Components';
		$readme[] = '';
		$readme[] = $this->getIndex($items);
		$readme[] = '';
[CUSTOMCODE=mainReadmePackageFooter]

		return implode("\n", $readme);
	}