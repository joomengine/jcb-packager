	/**
	 * Compiler Powers Plantuml Builder
	 *
	 * @var    Plantuml
	 * @since 3.2.0
	 **/
	protected Plantuml $plantuml;

	/**
	 * Constructor.
	 *
	 * @param Plantuml     $plantuml     The powers plantuml builder object.
	 *
	 * @since 3.2.0
	 */
	public function __construct(Plantuml $plantuml)
	{
		$this->plantuml = $plantuml;
	}

	/**
	 * Generate a README for a JCB Power class in Markdown format.
	 *
	 * Includes class details, namespace info, inheritance, UML diagram, and usage guide.
	 *
	 * @param  object  $item  The power class definition.
	 *
	 * @return string  The generated README.
	 * @since  3.2.2
	 */
	public function get(object $item): string
	{
		$readme = [];

		// Title
		$readme[] = '### JCB! Power';
		$type      = $item->type ?? 'UnknownType';
		$codeName  = $item->code_name ?? 'UnnamedClass';
		$namespace = $item->_namespace ?? 'Unknown\\Namespace';
		$extends   = $item->extends_name ?? null;
		$guid      = $item->guid ?? 'error_missing_guid';
		$parsed    = (is_array($item->parsed_class_code) ? $item->parsed_class_code : []);

		$readme[] = "# {$type} {$codeName} (Details)";
		$readme[] = "> namespace: **{$namespace}**";
		if (!empty($extends))
		{
			$readme[] = "> extends: **{$extends}**";
		}
		$readme[] = '';

		// UML Diagram
		$readme[] = '```uml';
		$readme[] = '@startuml';
		$readme[] = $this->plantuml->classDetailedDiagram(
			['name' => $codeName, 'type' => $type],
			$parsed
		);
		$readme[] = '@enduml';
		$readme[] = '```';
		$readme[] = '';

		// Description block
		$readme[] = <<<MD
The **Power** feature in JCB allows you to write PHP classes and their implementations,
making it easy to include them in your Joomla project. JCB handles linking, autoloading,
namespacing, and folder structure creation for you.

By using the **SPK** (Super Power Key) in your custom code (replacing the class name
in your code with the SPK), JCB will automatically pull the Power from the repository
into your project. This makes it available in your JCB instance, allowing you to edit
and include the class in your generated Joomla component.

JCB uses placeholders like [[[`NamespacePrefix`]]] and [[[`ComponentNamespace`]]] in
namespacing to prevent collisions and improve reusability across different JCB systems.

You can also set the **JCB powers path** globally or per component under the
**Dynamic Integration** tab, providing flexibility and maintainability.
MD;

		$readme[] = '';
		$readme[] = 'To add this specific Power to your project in JCB:';
		$readme[] = '';
		$readme[] = '> Simply use this SPK:';
		$readme[] = '```';
		$readme[] = 'Super---' . str_replace('-', '_', $guid) . '---Power';
		$readme[] = '```';
		$readme[] = '> Remember to replace the `---` with `___` to activate this Power in your code.';
		$readme[] = '';

		// Footer
[CUSTOMCODE=itemReadmePackageFooter]

		return implode("\n", $readme);
	}