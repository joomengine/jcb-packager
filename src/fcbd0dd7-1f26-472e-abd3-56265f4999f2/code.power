	/**
	 * Generate a README for a Joomla! Power entity in Markdown format.
	 *
	 * This includes the system name, description, settings table, and usage instructions.
	 *
	 * @param  object  $item  The Joomla! Power item definition.
	 *
	 * @return string  The generated README as Markdown.
	 * @since  3.2.2
	 */
	public function get(object $item): string
	{
		$readme = [];

		// Title and system name
		$readme[] = '### Joomla! Power';
		$readme[] = '# ' . ($item->system_name ?? 'error: missing system name');
		$readme[] = '';

		// Description block
		if (!empty($item->description))
		{
			$readme[] = trim($item->description);
			$readme[] = '';
		}

		// Settings table
		if (!empty($item->settings) && (is_array($item->settings) || is_object($item->settings)))
		{
			$readme[] = $this->buildSettingsTable($item->settings);
			$readme[] = '';
		}

		// Usage instructions
		$guid = $item->guid ?? 'error_missing_guid';
		$readme[] = '> This Joomla! Power lets you seamlessly integrate and future-proof Joomla classes in your custom code.';
		$readme[] = '';
		$readme[] = 'To add this specific power to your project in JCB:';
		$readme[] = '';
		$readme[] = 'Simply use this JPK:';
		$readme[] = '```';
		$readme[] = 'Joomla---' . str_replace('-', '_', $guid) . '---Power';
		$readme[] = '```';
		$readme[] = '> Remember to replace the `---` with `___` to activate this Joomla! Power in your code.';
		$readme[] = '';

		// Footer
[CUSTOMCODE=itemReadmePackageFooter]

		return implode("\n", $readme);
	}

	/**
	 * Builds a Markdown table with details about each setting.
	 *
	 * The table includes columns: Namespace (inline `use ...;` code style) and Joomla Version (as shield badge).
	 *
	 * @param  array|object  $settings  Associative array or object containing settings.
	 *
	 * @return string  The generated Markdown output.
	 * @since 5.1.1
	 */
	protected function buildSettingsTable(array|object $settings): string
	{
		$settings = (array) $settings;
		$markdown = [];

		// Table header
		$markdown[] = '| Namespace | Joomla Version |';
		$markdown[] = '|-----------|----------------|';

		foreach ($settings as $setting)
		{
			$setting = (array) $setting;

			// Inline namespace string as `use Namespace\Class;`
			$namespace = isset($setting['namespace'])
				? '`use ' . $setting['namespace'] . ';`'
				: '`â€”`';

			// Map version to badge label
			$versionMap = [
				'0' => ['All', 'purple'],
				'3' => ['Joomla 3', 'blue'],
				'4' => ['Joomla 4', 'green'],
				'5' => ['Joomla 5', 'brightgreen']
			];

			$versionCode = (string) ($setting['joomla_version'] ?? '0');
			[$label, $color] = $versionMap[$versionCode] ?? ['Unknown', 'lightgrey'];

			$versionBadge = "![{$label}](https://img.shields.io/badge/{$label}-{$color}?style=flat-square)";

			$markdown[] = "| {$namespace} | {$versionBadge} |";
		}

		return implode("\n", $markdown);
	}