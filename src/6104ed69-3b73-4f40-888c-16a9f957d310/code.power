	/**
	 * Generate a structured Markdown README for a Joomla Component defined in JCB.
	 *
	 * This README includes component metadata such as version, identifiers,
	 * ownership, feature toggles, licensing, and a collapsible template block.
	 *
	 * @param  object  $item  The JCB Component definition.
	 *
	 * @return string  The generated Markdown README.
	 * @since  5.1.1
	 */
	public function get(object $item): string
	{
		$readme = [];

		// Title Section
		$readme[] = '### JCB! Joomla Component';

		$name         = $item->name ?? 'error: missing name';
		$systemName   = $item->system_name ?? 'error: missing system name';
		$version      = $item->component_version ?? 'error: missing version';
		$codeName     = $item->name_code ?? 'code_name';

		$readme[] = "# {$name} (v{$version})";
		$readme[] = "## {$systemName} ({$codeName})";
		$readme[] = '';

		// Descriptions
		$short = trim((string) ($item->short_description ?? ''));
		if ($short !== '' && $short !== $systemName)
		{
			$readme[] = "> {$short}";
			$readme[] = '';
		}
		$description = trim((string) ($item->description ?? ''));
		if ($description !== '' && $description !== $short && $description !== $systemName)
		{
			$readme[] = $description;
			$readme[] = '';
		}

		// Owner Information
		$company = strtolower($item->companyname ?? '');
		if (!in_array($company, ['anon', 'anonymous'], true))
		{
			$readme[] = '### Company Details';
			$readme[] = "- " . $item->companyname;

			$author = trim((string) ($item->author ?? ''));
			if ($author !== '' && !in_array(strtolower($author), ['anon', 'anonymous'], true))
			{
				$readme[] = "- {$author}";
			}

			if (!empty($item->email))
			{
				$readme[] = "- [email](mailto:" . $item->email . ")";
			}

			if (!empty($item->website))
			{
				$readme[] = "- [website](" . $item->website . ")";
			}

			$readme[] = '';
		}

		// Component Settings
		$addPlaceholders = ((int) ($item->add_placeholders ?? 0) === 1)
			? '![yes](https://img.shields.io/badge/yes-success?style=flat-square)'
			: '![no](https://img.shields.io/badge/no-blue?style=flat-square)';

		$debugLineNumbers = ((int) ($item->debug_linenr ?? 0) === 1)
			? '![yes](https://img.shields.io/badge/yes-success?style=flat-square)'
			: '![no](https://img.shields.io/badge/no-blue?style=flat-square)';

		$readme[] = '### Component Settings';
		$readme[] = <<<MD
| Setting                       | Value               |
|-------------------------------|---------------------|
| Add Custom Code Placeholders  | {$addPlaceholders}  |
| Debug (line numbers)          | {$debugLineNumbers} |

MD;

		if (!empty($item->license))
		{
			$readme[] = '### License';
			$readme[] = '```text';
			$readme[] = $this->normalizeMarkdown($item->license);
			$readme[] = '```';
			$readme[] = '';
		}

		if (!empty($item->copyright))
		{
			$readme[] = '### Copyright';
			$readme[] = '```text';
			$readme[] = $this->normalizeMarkdown($item->copyright);
			$readme[] = '```';
			$readme[] = '';
		}

		// Readme Block (if defined in component)
		if (($item->addreadme ?? 0) == 1 && !empty($item->readme))
		{
			$readme[] = '<details>';
			$readme[] = '<summary>README Template</summary>';
			$readme[] = '';
			$readme[] = '```markdown';
			$readme[] = $this->normalizeMarkdown($item->readme);
			$readme[] = '```';
			$readme[] = '';
			$readme[] = '</details>';
			$readme[] = '';
		}

		// Footer
		$readme[] = '> Harness the power of this fully self-contained Joomla Component â€” complete, customizable, and built to manage data, views, logic, and access control seamlessly through JCB.';
		$readme[] = '';
[CUSTOMCODE=itemReadmePackageFooter]

		return implode("\n", $readme);
	}
[CUSTOMCODE=normalizeMarkdown]