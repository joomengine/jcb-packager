	/**
	 * Check if an folder is found locally
	 *
	 * @param  string   $fullPath  The full path to the folder
	 *
	 * @return bool
	 * @since  5.1.1
	 */
	protected function isLocal(string $fullPath): bool
	{
		return is_dir($fullPath);
	}

	/**
	 * Store the found content locally
	 *
	 * @param  string   $content   The zipped content as a string
	 * @param  string   $fullPath  The full path to the content
	 *
	 * @return bool  True on success, false on failure
	 * @since  5.1.1
	 */
	protected function store(string $content, string $fullPath): bool
	{
		$tmpZipPath = $fullPath . '.restore.zip';

		try
		{
			// Remove existing folder
			if (is_dir($fullPath))
			{
				if (!Folder::delete($fullPath))
				{
					throw new \RuntimeException("Failed to remove existing folder at: {$fullPath}");
				}
			}

			// Write zip content to temp file
			if (!File::write($tmpZipPath, $content))
			{
				throw new \RuntimeException("Failed to write temporary zip file to: {$tmpZipPath}");
			}

			// Unzip content
			if (!is_dir($fullPath))
			{
				Folder::create($fullPath);
			}

			$unzipResult = Folder::unpack($tmpZipPath, $fullPath);

			if (!$unzipResult || !is_array($unzipResult) || empty($unzipResult))
			{
				throw new \RuntimeException("Unzipping failed or returned no files for: {$tmpZipPath}");
			}

			return true;
		}
		catch (\Throwable $e)
		{
			$this->messages->add('error', Text::sprintf('System:Could not restore folder to %s<br><br><b>Error Message</b>:<br>%s',
				$fullPath, $e->getMessage()
			));
			return false;
		}
		finally
		{
			// Always try to remove the temp zip file
			if (is_file($tmpZipPath))
			{
				File::delete($tmpZipPath);
			}
		}
	}