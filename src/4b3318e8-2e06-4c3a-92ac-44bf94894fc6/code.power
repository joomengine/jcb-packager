	/**
	 * Generate a README for a JCB Custom Code block in Markdown format.
	 *
	 * Includes system name, execution target (auto/manual), path or function name, and code body.
	 *
	 * @param  object  $item  The custom code definition.
	 *
	 * @return string  The generated README.
	 * @since  5.1.1
	 */
	public function get(object $item): string
	{
		$readme = [];

		// Title
		$readme[] = '### JCB! Custom Code';
		$readme[] = '# ' . ($item->system_name ?? 'error: missing system name');
		$readme[] = '';

		$target = (int) ($item->target ?? 0);

		if ($target === 1)
		{
			// Hash-based automation
			$readme[] = '## Hash (automation)';

			$commentType     = (int) ($item->comment_type ?? 0);
			$joomlaVersion   = (int) ($item->joomla_version ?? 0);
			$joomlaLabel     = $joomlaVersion > 2 ? " J{$joomlaVersion}" : '';
			$insertionType   = $commentType === 1 ? "Replacement" : "Insertion";
			$readme[] = "#### {$insertionType}{$joomlaLabel}";
			$readme[] = '';

			$path = $item->path ?? 'error: missing path';
			$readme[] = '### Path';
			$readme[] = '```';
			$readme[] = $path;
			$readme[] = '```';
			$readme[] = '';
		}
		elseif ($target === 2 && !empty($item->function_name))
		{
			// Manual [CUSTOMCODE=...] style usage
			$readme[] = '## JCB (manual)';
			$readme[] = '```';
			$readme[] = '[CUSTOM' . 'CODE=' . $item->function_name . ']';
			$readme[] = '```';
			$readme[] = '';
		}

		// Code block
		$code = $item->code ?? 'error: missing code';
		$readme[] = '### Code';
		$readme[] = '```php';
		$readme[] = $code;
		$readme[] = '```';
		$readme[] = '';

		// Footer
		$readme[] = '> Add clean, self-contained code into your components with this reusable custom-code snippet designed for seamless integration and easy updates in JCB.';
		$readme[] = '';
[CUSTOMCODE=itemReadmePackageFooter]

		return implode("\n", $readme);
	}
